/*
    Type:      Extension Controller(Account) for VF page -ContactTable
    ---------------------------------------------------------------
    
    
    26-10-2015 Created by Narasimha Gundurao
*/

public class ContactTableController 
{
    /* Variables Declaration */ 
    private ApexPages.StandardController stdController;
    public boolean editMode {get; set;} 
    public string AccId {get; set;}
    public Account ParAcc {get; set;}
    public boolean refreshPage {get; set;}
    public String homePhoneAreaCodePart1{get;set;}
    public String homePhoneAreaCodePart2{get;set;}
    public String homePhoneAreaCodePart3{get;set;}
    public String workPhoneAreaCodePart1{get;set;}
    public String workPhoneAreaCodePart2{get;set;}
    public String workPhoneAreaCodePart3{get;set;}
    public String mobilePhoneAreaCodePart1{get;set;}
    public String mobilePhoneAreaCodePart2{get;set;}
    public String mobilePhoneAreaCodePart3{get;set;}
    public AreaCodeTranslation__mdt areacodeKR ;
    Public Boolean profilename{get;set;}
    public boolean editMode1 {get; set;}
   // public String MarketDescriminator= [Select Market__c From User Where Id =:UserInfo.getUserId()][0].Market__c;
    /**
  *@Description : Constructor.
  *@Date : 26/10/2015
  *@param:Apexpages Standard Controller (Account)
  *@return:This mehtod does not return any value.

  */ 
   Public boolean disableButtons{get;set;}
    
    public  ContactTableController(ApexPages.StandardController stdController)
    {
        editMode = false;
        editMode1 = false;
        AccId = stdController.getId();
        if(!test.isRunningTest()){  
        stdController.addFields(new List<String> {'Id','Mobile__c','Mobile2__c','Individual_Home_Phone__c','Home_Phone_2__c','Work_Phone__c','Phone','Email__c','Email2__c','Email3__c','Fax2__c','Fax','Fax_Validity2__c','Fax_Validity__c','Email_Status__c','Email_Status_2__c','Work_Phone_Last_Modified_Date__c','Work_Phone_Last_Modified_Date2__c',
            'Email_Status_3__c','Work_Phone_Status__c','Work_Phone_Status_2__c','Individual_Home_Phone_Status__c', 'Home_Phone_Status_2__c' ,'Mobile_Status__c','SMS_MMS_IM_Status_2__c','Email_Last_Modified_By__c','Email_Last_Modified_By2__c','Email_Last_Modified_By3__c','Email_Last_Modified_Date__c','Email_Last_Modified_Date2__c',
           'Work_Phone_Last_Modified_By__c','Work_Phone_Last_Modified_By2__c','Home_Phone_Last_Modified_By__c','Home_Phone_Last_Modified_By2__c','SMS_Last_Modified_By__c','SMS_Last_Modified_By2__c','SMS_Last_Modified_Date__c','SMS_Last_Modified_Date2__c','Home_Phone_Last_Modified_Date__c','Home_Phone_Last_Modified_Date2__c','Email_Last_Modified_Date3__c','MD__c'});
             
            } 
        ParAcc = (Account)stdController.getRecord(); 
        /*
        profilename = FALSE;
        String usrProfileName = [select u.Profile.Name from User u where u.id = :Userinfo.getUserId()].Profile.Name;
        if(usrProfileName.contains('Dealer')){
            profilename = TRUE;
        }
        */
        profile p = [select Name from profile where id =:userinfo.getprofileId()];
        disableButtons = true;
        system.debug('p.Name :'+p.Name);
        if(p.Name.contains('Dealer')){
            system.debug('Test 123');            
            disableButtons = false;          
        }
        if(disableButtons == true){
             //editMode = true;
             editMode1 = true;
        }
     }
     
    
     /**
  *@Description : This method makes editMode true which allows the user to input values to the phone numbers  and email fields.
  *@Date : 26/10/2015
  *@param: None
  *@return:This mehtod does not return any value.

  */ 
   public void PhoneNumberFormat(){
      
         if(!(String.isBlank(ParAcc.Individual_Home_Phone__c)) && ParAcc.MD__c=='KR'){
              if(!ParAcc.Individual_Home_Phone__c.contains('-')){
                  ApexPages.addmessage(new ApexPages.message(ApexPages.severity.Error,System.label.Insufficient_privilege));
              }
              else{
                  String[] resultshomePhoneAreaCode= ParAcc.Individual_Home_Phone__c.split('-');
                if(resultshomePhoneAreaCode.size() < 3)
                {
                  homePhoneAreaCodePart1='';
                  homePhoneAreaCodePart2=resultshomePhoneAreaCode[0];
                  homePhoneAreaCodePart3=resultshomePhoneAreaCode[1]; 
                }
                else
                {
                    homePhoneAreaCodePart1=resultshomePhoneAreaCode[0];
                    homePhoneAreaCodePart2=resultshomePhoneAreaCode[1];
                    homePhoneAreaCodePart3=resultshomePhoneAreaCode[2]; 
                }
              }              
          }
  
         if(!(String.isBlank(ParAcc.Work_Phone__c)) && ParAcc.MD__c=='KR'){ 
            if(!ParAcc.Work_Phone__c.contains('-')){
                  ApexPages.addmessage(new ApexPages.message(ApexPages.severity.Error,System.label.Insufficient_privilege));
              }
            else{
                String[] resultsworkPhoneAreaCode= ParAcc.Work_Phone__c.split('-'); 
                if(resultsworkPhoneAreaCode.size() < 3)
                {   
                    workPhoneAreaCodePart1= '';
                    workPhoneAreaCodePart2=resultsworkPhoneAreaCode[0];
                    workPhoneAreaCodePart3=resultsworkPhoneAreaCode[1];
                }
                else
                {
                    workPhoneAreaCodePart1=resultsworkPhoneAreaCode[0];
                    workPhoneAreaCodePart2=resultsworkPhoneAreaCode[1];
                    workPhoneAreaCodePart3=resultsworkPhoneAreaCode[2]; 
                }
            }
          } 
        if(!(String.isBlank(ParAcc.Mobile__c)) && ParAcc.MD__c=='KR'){ 
             if(!ParAcc.Mobile__c.contains('-')){
                  ApexPages.addmessage(new ApexPages.message(ApexPages.severity.Error,System.label.Insufficient_privilege));
              }
            else{
                String[] resultsMobilePhoneAreaCode= ParAcc.Mobile__c.split('-');  
                if(resultsMobilePhoneAreaCode.size() < 3)
                {
                mobilePhoneAreaCodePart1='';
                mobilePhoneAreaCodePart2=resultsMobilePhoneAreaCode[0];
                mobilePhoneAreaCodePart3=resultsMobilePhoneAreaCode[1]; 
                }
                else
                {
                    mobilePhoneAreaCodePart1=resultsMobilePhoneAreaCode[0];
                    mobilePhoneAreaCodePart2=resultsMobilePhoneAreaCode[1];
                    mobilePhoneAreaCodePart3=resultsMobilePhoneAreaCode[2];    
                } 
            }
          } 
   }
    public void EditAccount()    
      {
        editMode = true; 
        editMode1 = true;
        if(ParAcc.MD__c == 'KR'){
           PhoneNumberFormat();
         }
      }
    
    /**
  *@Description : This method updates the Account with the values entered by user to phone number and email fields.
  *@Date : 26/10/2015
  *@param: None
  *@return:This mehtod does not return any value.

  */ 
    
    public void UpdateAccount()  
    {
       if((String.isBlank(homePhoneAreaCodePart1)) && (String.isBlank(homePhoneAreaCodePart2)) && (String.isBlank(homePhoneAreaCodePart3)))
       {
           ParAcc.Individual_Home_Phone__c='';
       } 
       else if((!(String.isBlank(homePhoneAreaCodePart1)) || (String.isBlank(homePhoneAreaCodePart1))) && (!(String.isBlank(homePhoneAreaCodePart2)) || (String.isBlank(homePhoneAreaCodePart2))) && (!(String.isBlank(homePhoneAreaCodePart3)) || (String.isBlank(homePhoneAreaCodePart3))))
       {
           ParAcc.Individual_Home_Phone__c= homePhoneAreaCodePart1+'-'+homePhoneAreaCodePart2+'-'+homePhoneAreaCodePart3;
           if(ParAcc.Individual_Home_Phone__c.startsWith(' -'))
            {
                ParAcc.Individual_Home_Phone__c = ParAcc.Individual_Home_Phone__c.removeStart(' -');
            }
       }
        else
         {
           ParAcc.Individual_Home_Phone__c='';
         }
       
      if((String.isBlank(workPhoneAreaCodePart1)) && (String.isBlank(workPhoneAreaCodePart2)) && (String.isBlank(workPhoneAreaCodePart3)))
      {
               ParAcc.Work_Phone__c='';
      }
      else if((String.isBlank(workPhoneAreaCodePart1) || !(String.isBlank(workPhoneAreaCodePart1))) && (String.isBlank(workPhoneAreaCodePart2) || !(String.isBlank(workPhoneAreaCodePart2))) && (String.isBlank(workPhoneAreaCodePart3) || !(String.isBlank(workPhoneAreaCodePart3))))
      {
               ParAcc.Work_Phone__c= workPhoneAreaCodePart1+'-'+workPhoneAreaCodePart2+'-'+workPhoneAreaCodePart3;
               if(ParAcc.Work_Phone__c.startsWith(' -'))
                {
                    ParAcc.Work_Phone__c = ParAcc.Work_Phone__c.removeStart(' -');
                }
      }
        else
        { 
             ParAcc.Work_Phone__c='';
        }
        if((String.isBlank(mobilePhoneAreaCodePart1)) && (String.isBlank(mobilePhoneAreaCodePart2)) && (String.isBlank(mobilePhoneAreaCodePart3)))
      {
               ParAcc.Mobile__c='';
      }
      else if((!(String.isBlank(mobilePhoneAreaCodePart1)) || (String.isBlank(mobilePhoneAreaCodePart1))) && (!(String.isBlank(mobilePhoneAreaCodePart2)) || (String.isBlank(mobilePhoneAreaCodePart2))) && (!(String.isBlank(mobilePhoneAreaCodePart3)) || (String.isBlank(mobilePhoneAreaCodePart3))))
      {
               ParAcc.Mobile__c=mobilePhoneAreaCodePart1+'-'+mobilePhoneAreaCodePart2+'-'+mobilePhoneAreaCodePart3;
               if(ParAcc.Mobile__c.startsWith(' -'))
                {
                    ParAcc.Mobile__c = ParAcc.Mobile__c.removeStart(' -');
                }
      }
        else
        { 
             ParAcc.Mobile__c='';
        }
      
        try
        {
            if(ParAcc != null)
                refreshPage = true;
                update ParAcc;            
        }
        
        catch(DMLException de)
        {
            refreshPage = false;
            ApexPages.addmessage(new ApexPages.message(ApexPages.severity.Error,de.getDmlMessage(0)));
            
        }
    }
   /**
  *@Description : This method gets all the Areacode of Home Phone and Work Phone.
  *@Date : 26/10/2015
  *@param: None
  *@return:This mehtod returns list of Areacode.

  */   
    public List<SelectOption> getAreacodeItems() {
      areacodeKR = [SELECT Id,Phone_EN1__c,Phone_TR1__c,Phone_EN2__c,Phone_TR2__c,Phone_EN3__c,Phone_TR3__c ,Phone_EN4__c,Phone_TR4__c,Phone_EN5__c,Phone_TR5__c,Phone_EN6__c,Phone_TR6__c,Phone_EN7__c,Phone_TR7__c,
           Phone_EN8__c,Phone_TR8__c,Phone_EN9__c,Phone_TR9__c,Phone_EN10__c,Phone_TR10__c,Phone_EN11__c,Phone_TR11__c,Phone_EN12__c,Phone_TR12__c,Phone_EN13__c,Phone_TR13__c,Phone_EN14__c,Phone_TR14__c,
           Phone_EN15__c,Phone_TR15__c,Phone_EN16__c,Phone_TR16__c,Phone_EN17__c,Phone_TR17__c,Phone_EN18__c,Phone_EN19__c,Mobile_Code1__c,Mobile_Code2__c
            FROM AreaCodeTranslation__mdt WHERE MD__c  = 'KR' LIMIT 1];
            
                        
              Map<String,String> phoneAreaCodeMapKR = new Map<String,String>();
              phoneAreaCodeMapKR.put(' ',System.label.None);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN1__c,areacodeKR.Phone_EN1__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN2__c,areacodeKR.Phone_EN2__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN3__c,areacodeKR.Phone_EN3__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN4__c,areacodeKR.Phone_EN4__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN5__c,areacodeKR.Phone_EN5__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN6__c,areacodeKR.Phone_EN6__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN7__c,areacodeKR.Phone_EN7__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN8__c,areacodeKR.Phone_EN8__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN9__c,areacodeKR.Phone_EN9__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN10__c,areacodeKR.Phone_EN10__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN11__c,areacodeKR.Phone_EN11__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN12__c,areacodeKR.Phone_EN12__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN13__c,areacodeKR.Phone_EN13__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN14__c,areacodeKR.Phone_EN14__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN15__c,areacodeKR.Phone_EN15__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN16__c,areacodeKR.Phone_EN16__c);
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN17__c,areacodeKR.Phone_EN17__c); 
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN18__c,areacodeKR.Phone_EN18__c); 
              phoneAreaCodeMapKR.put(areacodeKR.Phone_EN19__c,areacodeKR.Phone_EN19__c); 
              phoneAreaCodeMapKR.put(areacodeKR.Mobile_Code1__c,areacodeKR.Mobile_Code1__c); 
              phoneAreaCodeMapKR.put(areacodeKR.Mobile_Code2__c,areacodeKR.Mobile_Code2__c); 
              
                          
              List<SelectOption> options = new List<SelectOption>();
                options.add(new SelectOption(' ',System.label.None));              
                options.add(new SelectOption( areacodeKR.Phone_EN1__c,areacodeKR.Phone_EN1__c+'      '+areacodeKR.Phone_TR1__c));
                options.add(new SelectOption( areacodeKR.Phone_EN2__c,areacodeKR.Phone_EN2__c+'       '+areacodeKR.Phone_TR2__c));
                options.add(new SelectOption( areacodeKR.Phone_EN3__c,areacodeKR.Phone_EN3__c+'       '+areacodeKR.Phone_TR3__c));
                options.add(new SelectOption( areacodeKR.Phone_EN4__c,areacodeKR.Phone_EN4__c+'       '+areacodeKR.Phone_TR4__c));
                options.add(new SelectOption( areacodeKR.Phone_EN5__c,areacodeKR.Phone_EN5__c+'       '+areacodeKR.Phone_TR5__c));
                options.add(new SelectOption( areacodeKR.Phone_EN6__c,areacodeKR.Phone_EN6__c+'       '+areacodeKR.Phone_TR6__c));
                options.add(new SelectOption( areacodeKR.Phone_EN7__c, areacodeKR.Phone_EN7__c+'        '+areacodeKR.Phone_TR7__c));
                options.add(new SelectOption( areacodeKR.Phone_EN8__c,areacodeKR.Phone_EN8__c+'       '+areacodeKR.Phone_TR8__c));
                options.add(new SelectOption( areacodeKR.Phone_EN9__c,areacodeKR.Phone_EN9__c+'        '+areacodeKR.Phone_TR9__c ));   
                options.add(new SelectOption( areacodeKR.Phone_EN10__c,areacodeKR.Phone_EN10__c+'       '+areacodeKR.Phone_TR10__c));
                options.add(new SelectOption( areacodeKR.Phone_EN11__c,areacodeKR.Phone_EN11__c+'       '+areacodeKR.Phone_TR11__c));
                options.add(new SelectOption( areacodeKR.Phone_EN12__c,areacodeKR.Phone_EN12__c+'       '+areacodeKR.Phone_TR12__c));
                options.add(new SelectOption( areacodeKR.Phone_EN13__c,areacodeKR.Phone_EN13__c+'       '+areacodeKR.Phone_TR13__c)); 
                options.add(new SelectOption( areacodeKR.Phone_EN14__c,areacodeKR.Phone_EN14__c+'       '+areacodeKR.Phone_TR14__c));
                options.add(new SelectOption( areacodeKR.Phone_EN15__c,areacodeKR.Phone_EN15__c+'       '+areacodeKR.Phone_TR15__c));
                options.add(new SelectOption( areacodeKR.Phone_EN16__c,areacodeKR.Phone_EN16__c+'       '+areacodeKR.Phone_TR16__c));
                options.add(new SelectOption( areacodeKR.Phone_EN17__c,areacodeKR.Phone_EN17__c+'       '+areacodeKR.Phone_TR17__c ));
                options.add(new SelectOption( areacodeKR.Mobile_Code1__c,areacodeKR.Mobile_Code1__c));
                options.add(new SelectOption( areacodeKR.Mobile_Code2__c,areacodeKR.Mobile_Code2__c));
                options.add(new SelectOption( areacodeKR.Phone_EN18__c,areacodeKR.Phone_EN18__c));
                options.add(new SelectOption( areacodeKR.Phone_EN19__c,areacodeKR.Phone_EN19__c));                
                if(!(String.isBlank(homePhoneAreaCodePart1)) && !phoneAreaCodeMapKR.containsKey(homePhoneAreaCodePart1)){
                  options.add(new SelectOption( homePhoneAreaCodePart1,homePhoneAreaCodePart1));
                }
                if(!(String.isBlank(workPhoneAreaCodePart1)) && !phoneAreaCodeMapKR.containsKey(workPhoneAreaCodePart1)){
                  options.add(new SelectOption( workPhoneAreaCodePart1,workPhoneAreaCodePart1));
                }  
                return options; 
        } 
      /**
  *@Description : This method gets the Mobile code.
  *@Date : 26/10/2015
  *@param: None
  *@return:This mehtod does return Mobile Codes.
  */     
     public List<SelectOption> getMobileAreacodeItems() {
         AreaCodeTranslation__mdt  mobileAreaCodeKR = [SELECT Id,Mobile_Code1__c,Mobile_Code2__c,Mobile_Code3__c,Mobile_Code4__c,Mobile_Code5__c,Mobile_Code6__c,Mobile_Code7__c FROM AreaCodeTranslation__mdt WHERE MD__c  = 'KR' LIMIT 1]; 
        
         List<selectOption> options = new List<selectOption>();
           options.add(new SelectOption(' ',System.label.None));
           options.add(new SelectOption(mobileAreaCodeKR.Mobile_Code1__c,mobileAreaCodeKR.Mobile_Code1__c));
           options.add(new SelectOption(mobileAreaCodeKR.Mobile_Code2__c,mobileAreaCodeKR.Mobile_Code2__c));
           options.add(new SelectOption(mobileAreaCodeKR.Mobile_Code3__c,mobileAreaCodeKR.Mobile_Code3__c));
           options.add(new SelectOption(mobileAreaCodeKR.Mobile_Code4__c,mobileAreaCodeKR.Mobile_Code4__c));
           options.add(new SelectOption(mobileAreaCodeKR.Mobile_Code5__c,mobileAreaCodeKR.Mobile_Code5__c));
           options.add(new SelectOption(mobileAreaCodeKR.Mobile_Code6__c,mobileAreaCodeKR.Mobile_Code6__c));
           options.add(new SelectOption(mobileAreaCodeKR.Mobile_Code7__c,mobileAreaCodeKR.Mobile_Code7__c));           
           return options;
     }
    /**
  *@Description : This method Makes Edit mode false.
  *@Date : 26/10/2015
  *@param: None
  *@return:This mehtod does not return any value.
  */
    public PageReference CancelUpdate()
     {
        editMode = false; 
        editMode1 = false;
        PageReference page = new PageReference('/apex/ContactTable?Id='+ParAcc.Id);
        page.setRedirect(true);
        return page;
     }    
}