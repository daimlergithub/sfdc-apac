<apex:page docType="html" showHeader="true" sidebar="false" standardStylesheets="true" controller="GenericCSVLoaderController">
   <apex:includeScript value="{!$Resource.jQuery}" />
   <apex:includeScript value="{!$Resource.Angular}"/>
   <apex:includeScript value="{!$Resource.Bootstrap}"/>
   <apex:includeScript value="{!$Resource.UiBootstrap}" />
   <apex:includeScript value="{!$Resource.jQueryCSV}" />
   <apex:includeScript value="{!$Resource.JSforce}" /> 

    <html>
    <head>
         <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
         <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" />

         <style>
             td { padding: 10px; }
         </style>
    </head>
    
    <body ng-app="UploadApp" >
        
    <div ng-controller="UploadController ">
        <br/><br/>
        <h4>{!$Label.GenericUploaderForAccount}</h4>
        <hr/>

        <table>
            <tr>
                <td><input type="file" ng-model="fileName" ng-file-select="onFileSelect($files)" /></td> 
                <td ng-if="loadProgress">
                    <i class="glyphicon glyphicon-refresh"></i>
                </td>
                <td ng-if="fileLoaded"><a ng-click="uploadApex()" id="confirmBt" class="btn btn-lg btn-primary" >{!$Label.GenericUploaderForAccountConfirm}</a></td>       
                <td ng-if="uploadProgress">
                    <img src="/img/loading.gif" />&nbsp;<span style="color:red;">Loading...</span>
                </td>
            </tr>
        </table>
    <div ng-if="loadError!=''" class="alert alert-danger alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <strong>ERROR: </strong>The CSV file could not be loaded. Check the format ({{loadError}}).
    </div>       
    <br/><br/>
    <h4 ng-if="previewRecords==null||previewHeader==null">{!$Label.GenericUploaderForAccountPreview}</h4>
    <h4 ng-if="previewRecords!=null&&previewHeader!=null">{!$Label.GenericUploaderForAccountPreview} ({{previewRecords.length}} of {{records.length-1}})</h4>
    <hr/>
    <div ng-if="previewRecords==null||previewHeader==null" class="alert alert-info alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <strong>INFO:</strong> To see the preview, select file with the choose file button.
    </div>
    <table ng-if="previewRecords!=null&&previewHeader!=null" class="table table-striped table-condensed">
        <thead>
            <tr>
                <th class="id" ng-repeat="field in previewHeader">{{field}}</th>
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="row in previewRecords">
                <td ng-repeat="field in row track by $index">{{field}}</td>
            </tr>
        </tbody>
    </table>
    <br/>
    <h4>{!$Label.GenericUploaderForAccountUploadResults}</h4>
    <hr/>
    <div ng-if="uploadText==''" class="alert alert-info alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <strong>INFO: </strong>To get results, start upload with the confirmation button.
    </div>      
    <div ng-if="uploadText!=''" class="alert alert-success alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <strong>SUCCESS: </strong>{{uploadText}}
    </div>       
    <div ng-if="uploadError!=''" class="alert alert-danger alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <strong>ERROR: </strong>{{uploadError}}
    </div>    
    <table ng-if="uploadErrorTable!=null" class="table table-striped table-condensed">
        <thead>
            <tr>
                <th class="id">Line</th>
                <th class="id">Status</th>
                <th class="id">Message</th>
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="row in uploadErrorTable" class="danger">
                <td>{{row.Line}}</td><td>{{row.Status}}</td><td>{{row.Message}}</td>
            </tr>
        </tbody>
    </table>       
    </div>      
    
<script type="text/javascript">
    Visualforce.remoting.timeout = 120000;
    var app = angular.module('UploadApp', []);

    app.controller('UploadController', function ($scope, fileReader) {
      $scope.connection = new jsforce.Connection({ accessToken: '{!$API.Session_Id}' });
      $scope.chunkSize = 1000;          
      $scope.fileLoaded = false;
      $scope.fileName = "";
      $scope.previewHeader=null;
      $scope.previewRecords=null;
      $scope.uploadText='';
      $scope.uploadError='';
      $scope.uploadErrorTable=null;
      $scope.errorMessages=[];
      $scope.uploadedRecords=0;
      $scope.loadError='';
      $scope.loadProgress = false;
      $scope.uploadProgress = false;
      $scope.sObjectFieldTypes = null;
      
      $scope.getFile = function () {
        $scope.dynamic = 0;
        
        $scope.loadProgress=true;
        $scope.uploadText='';
        $scope.uploadError='';
        $scope.uploadErrorTable=null;
        $scope.uploadedRecords=0;
        $scope.errorMessages=[];        
        fileReader.readAsText($scope.file, $scope)
          .then(function(result) {
              try{
              $scope.records = $.csv.toArrays(result);
              $scope.previewHeader = $scope.records[0];
              $scope.previewRecords = [];
              for (i = 1; i < 51 && i < $scope.records.length; i++) {
                  $scope.previewRecords.push($scope.records[i]);
              }
              //$scope.downloadFieldTypes($scope.records[0][0]);
              $scope.loadProgress=false;
              $scope.fileLoaded = true;
              $scope.loadError='';                      
              } 
              catch(err) {
                  console.log(err);
                  $scope.loadProgress=false;
                  $scope.fileLoaded = false;
                  $scope.fileName="";
                  $scope.loadError=err.message;
              }
          });
      };

      $scope.uploadApex = function () {
          $scope.uploadProgress=true;
          sObjectFields=null;
          sObjectInstances = [];
          
          var NoPhone = false;
          var NoHomePhone = false;
          var NoMobile = false;
          
          for (record in $scope.records) {
              if(NoMobile && NoPhone && NoHomePhone) {
                  break;
              }
              NoPhone = false;
              NoHomePhone = false;
              NoMobile = false;
              if (sObjectFields==null) {
                  sObjectFields = $scope.records[record];
              } else {
                  //sObjectInstance = { 'sObjectType' : 'Account' };
                  sObjectInstance = {};
                  for (field in sObjectFields) {
                      //alert(sObjectFields[field]);   Column name,  field name.
                      //alert(record);     line number.
                      //alert($scope.records[record][field]);   value of this line.
                      
                      if(sObjectFields[field] == 'DMS Customer ID') {
                          sObjectInstance['DMS_Customer_ID__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Title') {
                          sObjectInstance['PersonTitle']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'First name') {
                          sObjectInstance['FirstName']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Last Name') {
                          sObjectInstance['LastName']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Birthdate') {
                          if($scope.records[record][field] != '') {
                              sObjectInstance['Branch_name__c']=$scope.records[record][field];
                          }
                      }
                      else if(sObjectFields[field] == 'Hobbies') {
                          sObjectInstance['Hobby__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Status') {
                          sObjectInstance['Status__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Source') {
                          sObjectInstance['Data_Source__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Email Opt Out') {
                          if($scope.records[record][field] == 'true' || $scope.records[record][field] == 'TRUE') {
                              sObjectInstance['PersonHasOptedOutOfEmail']=true;
                          }
                      }
                      else if(sObjectFields[field] == 'Hobbies') {
                          sObjectInstance['Hobby__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Home phone') {
                          if($scope.records[record][field] == '') {
                              NoHomePhone = true;
                              if(NoMobile && NoPhone) {break; }
                          }
                          else {
                              sObjectInstance['PersonHomePhone']=$scope.records[record][field];
                              NoHomePhone = false;
                          }
                      }
                      
                      else if(sObjectFields[field] == 'phone') {
                          if($scope.records[record][field] == '') {
                              NoPhone = true;
                              if(NoMobile && NoHomePhone) { break; }
                          }
                          else {
                              sObjectInstance[sObjectFields[field]]=$scope.records[record][field];
                              NoPhone = false;
                          }
                      }
                      
                      else if(sObjectFields[field] == 'extension') {
                          sObjectInstance['Extension_Number__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Mobile phone') {
                          if($scope.records[record][field] == '') {
                              NoMobile = true;
                              if(NoPhone && NoHomePhone) { break;}
                          }
                          else {
                              sObjectInstance['PersonMobilePhone']=$scope.records[record][field];
                              NoMobile = false;
                          }
                      }
                      else if(sObjectFields[field] == 'E-mail') {
                          sObjectInstance['PersonEmail']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Preferred Contact Method') {
                          sObjectInstance['Preferred_Contact_Method__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Preferred contact time') {
                          sObjectInstance['Preferred_Contact_Time__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'Province') {
                          sObjectInstance['Province__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'City') {
                          sObjectInstance['City__c']=$scope.records[record][field];
                      }
                      else if(sObjectFields[field] == 'zipcode') {
                          sObjectInstance['ZipCode__c']=$scope.records[record][field];
                      }
                      else {
                          sObjectInstance[sObjectFields[field]]=$scope.records[record][field];
                      }
                      sObjectInstance['File_Name__pc']=$scope.fileName;
                  }
                  sObjectInstances.push(sObjectInstance);                            
              }
          }
          console.log(sObjectInstances);
          sObjectInstances = sObjectInstances.splice(0, sObjectInstances.length-1);
          $scope.nextObjectInstances = sObjectInstances.slice($scope.chunkSize, sObjectInstances.length);
          if ($scope.records.length > 10001) {
              alert('{!$Label.GenericUploaderLengthErrorMsg}');
              $scope.uploadProgress=false;
          }
          else if(NoMobile && NoPhone && NoHomePhone) {
              alert('{!$Label.GenericUploaderErrorMsg}');
              $scope.uploadProgress=false;
          }
          else {
              GenericCSVLoaderController.uploadAccounts(sObjectInstances.slice(0, $scope.chunkSize), $scope.uploadApexPart);
          }
      };
      
      $scope.validateValue = function (fieldName, fieldValue) {
          // Not yet implemented
      };
      
      $scope.uploadApexPart = function (result, event) {  
          if (!event.status) {
              $scope.uploadProgress=false;
              $scope.uploadError=event.message;
          } else {
              for (entry in result) {
                  if (result[entry].success) {
                      $scope.uploadedRecords++;                              
                  } else {
                      if (result[entry].errors!=null) {
                        $scope.errorMessages.push({ Line : entry, Status : result[entry].errors[0].status, Message : result[entry].errors[0].message});
                      }
                  }
              }
          }
           
          if($scope.nextObjectInstances.length>0) {
              console.log('Processing next chunk');
              sObjectInstances = $scope.nextObjectInstances.slice(0, $scope.chunkSize);
              console.log(sObjectInstances.length);
              //$scope.dynamic = $scope.dynamic + sObjectInstances.length;
              //$scope.dynamicPersent = Math.floor($scope.dynamic * 100 / ($scope.records.length - 1));

              $scope.nextObjectInstances = $scope.nextObjectInstances.slice($scope.chunkSize, $scope.nextObjectInstances.length);
              GenericCSVLoaderController.uploadAccounts(sObjectInstances, $scope.uploadApexPart);
          } else {
              if(event.status) {  
                  $scope.$apply(function() {
                      if ($scope.uploadedRecors==0) {
                          $scope.uploadText="No records were uploaded";
                      }
                      else {
                          $scope.uploadText="Uploaded " + $scope.uploadedRecords + " records out of " + ($scope.records.length-1) + " successfully.";
                      }
                      if ($scope.errorMessages.length>0) {
                          $scope.uploadErrorTable = $scope.errorMessages;
                      }
                  });           
              }
              $scope.$apply(function() {
                  $scope.uploadProgress=false;
                  $scope.fileName="";
                  $scope.fileLoaded=false;
                  $scope.previewHeader=null;
                  $scope.previewRecords=null;                          
              });
          }
      };
            
      $scope.$on("fileProgress", function(e, progress) {
          $scope.loadProgress = true;
      });
      
    });
     
    app.directive("ngFileSelect",function(){
      return {
        link: function($scope,el){
          el.bind("change", function(e){
            $scope.file = (e.srcElement || e.target).files[0];
            $scope.getFile();
          })     
        }   
      }
    });
    
    app.factory('fileReader', function ($q, $log) {
      var onLoad = function(reader, deferred, scope) {
        return function () {
            scope.$apply(function () {
                deferred.resolve(reader.result);
            });
        };
      };
      var onError = function (reader, deferred, scope) {
        return function () {
            scope.$apply(function () {
                deferred.reject(reader.result);
            });
        };
      };
      var onProgress = function(reader, scope) {
        return function (event) {
            scope.$broadcast("fileProgress",
                {
                    total: event.total,
                    loaded: event.loaded
                });
        };
      };
      var getReader = function(deferred, scope) {
        var reader = new FileReader();
        reader.onload = onLoad(reader, deferred, scope);
        reader.onerror = onError(reader, deferred, scope);
        reader.onprogress = onProgress(reader, scope);
        return reader;
      };
      var readAsDataURL = function (file, scope) {
        var deferred = $q.defer();
        var reader = getReader(deferred, scope);        
        reader.readAsDataURL(file);    
        return deferred.promise;
      };
      var readAsText = function (file, scope) {
        var deferred = $q.defer();
        var reader = getReader(deferred, scope);
        reader.readAsText(file, "UTF-8");
        return deferred.promise;
      };
      return {
        readAsDataUrl: readAsDataURL, 
        readAsText: readAsText 
      };
    });
    
    var ProgressDemoCtrl = function ($scope) {
        $scope.dynamic = 0;
    }
    
    </script>
    </body>
    </html>
</apex:page>