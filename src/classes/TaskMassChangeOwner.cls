/*
    Type:       Controller for TaskMassChangeOwener Visualforce page 
    Purpose:    Mass reassign tasks 
    User Story: US-SSI-006
    Used By:    TaskMassChangeOwener.page
    ---------------------------------------------------------------
    History:
    
    1. Chris Created on 2013-04-24
    2. Shuang Li Edit on 2014-03-17  US-SMART_SSI-007
*/

public with sharing class TaskMassChangeOwner {
	public Task task{set;get;}    
	private String [] arrObjIds;    
    
    /**
  *@Description : Constructor
  *@Date : 4/11/2015
  *@param: ApexPages.StandardController(Task)
  *@return:This mehtod does not return any value.

  */
	public TaskMassChangeOwner(){        
		//Initalize the variables   
		     
		task = new Task(recordTypeId = Schema.SObjectType.Task.getRecordTypeInfosByName().get('Welcome Call').getRecordTypeId());        
		Map<String, String> params = ApexPages.currentPage().getParameters();        
		String strObjIds = params.get('objIds');        
		arrObjIds = strObjIds.split(',');                  
	}            
		
	/**
  *@Description : Assigns the task with different owner and updates Related SSI object.
  *@Date : 4/11/2015
  *@param: None
  *@return:This mehtod does not return any value.

  */	
		
	public void assignToOwnerClick(){        
		if(task.OwnerId==null){            
			Apexpages.addMessage(new Apexpages.Message(ApexPages.severity.ERROR,'New Owner Cannot be null.'));            
		    return;    
		}                
		List<Id> relatedSSIIds = new List<Id>();

		List<Task> tasks = [Select Id, OwnerId, WhatId From Task Where Id=:arrObjIds];        
		for(Task t : tasks){            
			t.OwnerId = task.OwnerId;    
			if(t.WhatId!=null && t.WhatId.getSObjectType()==SSI__c.getSObjectType()){
				relatedSSIIds.add(t.WhatId);
			}
		}                
		if(tasks.size()>0){                        
			update tasks;     
			if(relatedSSIIds.size()>0){
				updateRelatedSSIs(relatedSSIIds, task.OwnerId);
			}         
		}    
	}
	/**
  *@Description : Assigns the task with different owner and updates Related SSI object.
  *@Date : 4/11/2015
  *@param: None
  *@return:This mehtod does not return any value.

  */
	public void updateRelatedSSIs(List<Id> relatedSSIIds, Id ownerId){
		List<SSI__c> ssis = [Select Id, OwnerId From SSI__c Where Id in :relatedSSIIds];
		for(SSI__c ssi : ssis){
			ssi.OwnerId = ownerId;
		}
		update ssis;
	}
}